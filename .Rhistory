exp_tempo = nat_tempo + (avg_adj_tempo.opp - nat_tempo)
) %>%
mutate(
adj_eOFF  = nat_eOFF  * eOFF / exp_eOFF,
adj_eDEF  = nat_eOFF  * eDEF / exp_eDEF,
adj_orb   = minmax(nat_orb   * `ORB%` / exp_orb),
adj_drb   = minmax(nat_drb   * `DRB%` / exp_drb),
adj_tempo = nat_tempo * posses / exp_tempo
)
print(summary(
select(iter_data, adj_eOFF, adj_eDEF, adj_orb, adj_drb, adj_tempo)
))
return(iter_data)
}
adjTmp <- ff_adjust_iter(adjData)
adjTmp <- ff_adjust_iter(adjData) %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter()
adjTmp <- ff_adjust_iter(adjData) %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter()
adjData <- select(df, game_stats_id, opp_stats_id, team_id, season, wk, game_num, wk_adj, eOFF, eDEF, `ORB%`, `DRB%`, posses, home_away_neutral) %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
nat_orb = predict(orb_lm, .),
nat_drb = predict(drb_lm, .),
nat_tempo = predict(posses_lm, .),
han=home_away_neutral
) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF)),
avg_orb = cum_mean(lag(`ORB%`)),
avg_drb = cum_mean(lag(`DRB%`)),
avg_tempo = cum_mean(lag(posses))
) %>% ungroup() %>%
# Temporary Replacement Strategy, Should Re-Evaluate in the future
mutate(
avg_eOFF = ifelse(is.na(avg_eOFF), nat_eOFF, avg_eOFF),
avg_eDEF = ifelse(is.na(avg_eDEF), nat_eOFF, avg_eDEF),
avg_orb  = ifelse(is.na(avg_orb),  nat_orb,  avg_orb),
avg_drb  = ifelse(is.na(avg_drb),  nat_drb,  avg_drb),
avg_tempo = ifelse(is.na(avg_tempo), nat_tempo, avg_tempo)
) %>%
left_join(select(., game_stats_id, avg_eOFF, avg_eDEF, avg_orb, avg_drb, avg_tempo), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ eOFF_home_adv / 2,
home_away_neutral == 'A' ~ - eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eDEF.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ - eOFF_home_adv / 2,
home_away_neutral == 'A' ~ eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eOFF.opp - nat_eOFF),
exp_orb = nat_orb + case_when(han=='H' ~ orb_home_adv, han=='A'~-orb_home_adv,T~0) + (avg_drb.opp - nat_drb),
exp_drb = nat_drb + case_when(han=='H'~drb_home_adv,han=='A'~-drb_home_adv,T~0) + (avg_orb.opp - nat_orb),
exp_tempo = nat_tempo + (avg_tempo.opp - nat_tempo)
) %>%
mutate(
adj_eOFF = nat_eOFF * eOFF / exp_eOFF,
adj_eDEF = nat_eOFF * eDEF / exp_eDEF,
adj_orb = minmax(nat_orb  * `ORB%` / exp_orb),
adj_drb = minmax(nat_drb * `DRB%` / exp_drb),
adj_tempo = nat_tempo * posses / exp_tempo
) %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter() %>%
ff_adjust_iter()
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, home_away_neutral, wk_adj, result, `TOV%`, `FT%`, `eFG%`)
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, han, wk_adj, result, `TOV%`, `FT%`, `eFG%`)
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, wk_adj, result, `TOV%`, `FT%`, `eFG%`) %>%
left_join(adjData, adj_eOFF, adj_eDEF, adj_eOFF, adj_orb, adj_drb, adj_tempo)
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, wk_adj, `TOV%`, `FT%`, `eFG%`) %>%
left_join(adjData, adj_eOFF, adj_eDEF, adj_eOFF, adj_orb, adj_drb, adj_tempo, han, result)
View(adjData)
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, wk_adj, `TOV%`, `FT%`, `eFG%`) %>%
left_join(select(adjData, game_stats_id, adj_eOFF, adj_eDEF, adj_eOFF, adj_orb, adj_drb, adj_tempo, han, result),
by='game_stats_id')
View(adjData)
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, wk_adj, `TOV%`, `FT%`, `eFG%`) %>%
left_join(select(adjData, game_stats_id, adj_eOFF, adj_eDEF, adj_eOFF, adj_orb, adj_drb, adj_tempo, han),
by='game_stats_id')
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, wk_adj, `TOV%`, `FT%`, `eFG%`) %>%
left_join(select(adjData, game_stats_id, adj_eOFF, adj_eDEF, adj_eOFF, adj_orb, adj_drb, adj_tempo, han),
by='game_stats_id') %>%
left_join(select(df, game_stats_id, result), by="game_stats_id")
# LIBRARIES =====
library(dplyr)
library(lubridate)
library(RSQLite)
library(ggplot2)
# CUSTOM FUNCITONS =====
most_common_element <- function(elements){
x <- names(sort(table(elements), decreasing = TRUE))
return(x[1])
}
# DATA =====
conn <- dbConnect(RSQLite::SQLite(), "db")
game_data <- dbGetQuery(conn, "SELECT * FROM game_data") %>%
mutate(date = as.Date(date)) %>%
mutate(
opp_stats_id = case_when(
game_stats_id %% 2 == 0 ~ game_stats_id + 1,
TRUE ~ game_stats_id - 1
),
season = year(date) - ifelse(month(date) %in% c(11, 12), 0, 1),
win = ifelse(result=='W', 1, 0)
) %>%
group_by(season) %>%
mutate(
wk = ceiling(as.numeric(date - floor_date(min(date), 'week') )/ 7)
) %>% ungroup() %>%
left_join({
select(., season, team_id, loc) %>%
group_by(season, team_id) %>%
summarise(home_arena = most_common_element(loc))
}, by=c("team_id", "season")) %>%
left_join(select(., game_stats_id, home_arena), by=c("opp_stats_id" = "game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
home_away_neutral = case_when(
loc == home_arena ~ 'H',
loc == home_arena.opp ~ 'A',
TRUE ~ 'N'
),
posses = ( 0.96*((fga)+(tov)+0.44*(fta)-(orb)) )
) %>%
group_by(season, team_id) %>% arrange(date) %>%
mutate(game_num = 1:n()) %>% ungroup()
df <- game_data %>%
select(game_stats_id, opp_stats_id, home_away_neutral,team_id, opp_id, date, season, wk, loc, orb, drb, tov, pts, fg, fga, fg3, ft, fta, posses, game_num) %>%
left_join(select(game_data, game_stats_id, orb, drb, tov, pts, posses), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
`TS%` = pts / (2*(fga + (0.44 * fta))),
`eFG%` = (fg + 0.5 * fg3) / fga,
posses =  (posses + posses.opp) / 2
) %>%
mutate(
`TOV%` = tov / posses,
`TOV%_force` = tov.opp / posses,
`TOV_adv` = (tov / posses) / ( tov.opp / posses),
eOFF = pts / posses,
eDEF = pts.opp / posses,
`ORB%` = orb / (orb + drb.opp),
`DRB%` = drb / (drb + orb.opp),
`FT%` = ft / fta,
wk_adj = ifelse(wk >= 19, 19, wk)
)
df %>%
group_by(wk_adj) %>%
summarise(y=mean(`TOV%`)) %>%
ggplot(aes(x=wk_adj, y=y)) + geom_point() + geom_smooth(method='lm', formula = y ~ x)
df <- game_data %>%
select(game_stats_id, opp_stats_id, home_away_neutral,team_id, opp_id, date, season, wk, loc, orb, drb, tov, pts, fg, fga, fg3, ft, fta, posses, game_num) %>%
left_join(select(game_data, game_stats_id, orb, drb, tov, pts, posses), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
`TS%` = pts / (2*(fga + (0.44 * fta))),
`eFG%` = (fg + 0.5 * fg3) / fga,
posses =  (posses + posses.opp) / 2
) %>%
mutate(
`TOV%` = tov / posses,
`TOV%_force` = tov.opp / posses,
`TOV_adv` = (tov / posses) / ( tov.opp / posses),
eOFF = pts / posses,
eDEF = pts.opp / posses,
`ORB%` = orb / (orb + drb.opp),
`DRB%` = drb / (drb + orb.opp),
`FT%` = ft / fta,
wk_adj = ifelse(wk >= 19, 19, wk),
win = pts > opp.pts
)
df <- game_data %>%
select(game_stats_id, opp_stats_id, home_away_neutral,team_id, opp_id, date, season, wk, loc, orb, drb, tov, pts, fg, fga, fg3, ft, fta, posses, game_num) %>%
left_join(select(game_data, game_stats_id, orb, drb, tov, pts, posses), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
`TS%` = pts / (2*(fga + (0.44 * fta))),
`eFG%` = (fg + 0.5 * fg3) / fga,
posses =  (posses + posses.opp) / 2
) %>%
mutate(
`TOV%` = tov / posses,
`TOV%_force` = tov.opp / posses,
`TOV_adv` = (tov / posses) / ( tov.opp / posses),
eOFF = pts / posses,
eDEF = pts.opp / posses,
`ORB%` = orb / (orb + drb.opp),
`DRB%` = drb / (drb + orb.opp),
`FT%` = ft / fta,
wk_adj = ifelse(wk >= 19, 19, wk),
win = pts > pts.opp
)
adj_ff_bball <- ff_bball %>%
select(game_stats_id, opp_stats_id, team_id, wk_adj, `TOV%`, `FT%`, `eFG%`) %>%
left_join(select(adjData, game_stats_id, adj_eOFF, adj_eDEF, adj_eOFF, adj_orb, adj_drb, adj_tempo, han),
by='game_stats_id') %>%
left_join(select(df, game_stats_id, win), by="game_stats_id")
View(adj_ff_bball)
# LIBRARIES =====
library(dplyr)
library(lubridate)
library(RSQLite)
library(ggplot2)
# CUSTOM FUNCITONS =====
most_common_element <- function(elements){
x <- names(sort(table(elements), decreasing = TRUE))
return(x[1])
}
# DATA =====
conn <- dbConnect(RSQLite::SQLite(), "db")
game_data <- dbGetQuery(conn, "SELECT * FROM game_data") %>%
mutate(date = as.Date(date)) %>%
mutate(
opp_stats_id = case_when(
game_stats_id %% 2 == 0 ~ game_stats_id + 1,
TRUE ~ game_stats_id - 1
),
season = year(date) - ifelse(month(date) %in% c(11, 12), 0, 1),
win = ifelse(result=='W', 1, 0)
) %>%
group_by(season) %>%
mutate(
wk = ceiling(as.numeric(date - floor_date(min(date), 'week') )/ 7)
) %>% ungroup() %>%
left_join({
select(., season, team_id, loc) %>%
group_by(season, team_id) %>%
summarise(home_arena = most_common_element(loc))
}, by=c("team_id", "season")) %>%
left_join(select(., game_stats_id, home_arena), by=c("opp_stats_id" = "game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
home_away_neutral = case_when(
loc == home_arena ~ 'H',
loc == home_arena.opp ~ 'A',
TRUE ~ 'N'
),
posses = ( 0.96*((fga)+(tov)+0.44*(fta)-(orb)) )
) %>%
group_by(season, team_id) %>% arrange(date) %>%
mutate(game_num = 1:n()) %>% ungroup()
df <- game_data %>%
select(game_stats_id, opp_stats_id, home_away_neutral,team_id, opp_id, date, season, wk, loc, orb, drb, tov, pts, fg, fga, fg3, ft, fta, posses, game_num) %>%
left_join(select(game_data, game_stats_id, orb, drb, tov, pts, posses), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
`TS%` = pts / (2*(fga + (0.44 * fta))),
`eFG%` = (fg + 0.5 * fg3) / fga,
posses =  (posses + posses.opp) / 2
) %>%
mutate(
`TOV%` = tov / posses,
`TOV%_force` = tov.opp / posses,
`TOV_adv` = (tov / posses) / ( tov.opp / posses),
eOFF = pts / posses,
eDEF = pts.opp / posses,
`ORB%` = orb / (orb + drb.opp),
`DRB%` = drb / (drb + orb.opp),
`FT%` = ft / fta,
wk_adj = ifelse(wk >= 19, 19, wk),
win = pts > pts.opp
)
# score:
df %>%
mutate(
pre = ifelse(wk_adj < 10, 1, 0)
) %>%
group_by(season, team_id, pre) %>%
summarise(tov_rate = tov / posses)
# score:
df %>%
mutate(
pre = ifelse(wk_adj < 10, 1, 0)
) %>%
group_by(season, team_id, pre) %>%
summarise(tov_rate = sum(tov) / sum(posses))
# score:
df %>%
mutate(
pre = ifelse(wk_adj < 10, 1, 0)
) %>%
group_by(season, team_id, pre) %>%
summarise(tov_rate = sum(tov) / sum(posses)) %>%
spread(pre, tov_rate)
library(tidyr)
# score:
df %>%
mutate(
pre = ifelse(wk_adj < 10, 1, 0)
) %>%
group_by(season, team_id, pre) %>%
summarise(tov_rate = sum(tov) / sum(posses)) %>%
spread(pre, tov_rate)
library(Hmisc)
tmp <- df %>%
mutate(
pre = ifelse(wk_adj < 10, 1, 0)
) %>%
group_by(season, team_id, pre) %>%
summarise(tov_rate = sum(tov) / sum(posses)) %>%
spread(pre, tov_rate)
cor(tmp$`0`, tmp$`1`)
cor(tmp$`0`, tmp$`1`)
rcorr(tmp$`0`, tmp$`1`)
rcorr(x=tmp$`0`, y=tmp$`1`)
mean(df$tov / df$posses)
tmp <- df %>%
group_by(season, team_id) %>%
summarise(avg_eOFF)
tmp <- df %>%
group_by(season, team_id) %>%
summarise(avg_eOFF = mean(eOFF))
season_data <- select(
df, season, team_id, eOFF, eDEF
) %>%
group_by(season, team_id) %>%
summairse(
avg_eOFF = mean(eOFF),
abg_eDEF = mean(eDEF)
)
season_data <- select(
df, season, team_id, eOFF, eDEF
) %>%
group_by(season, team_id) %>%
summairse(
avg_eOFF = mean(eOFF),
avg_eDEF = mean(eDEF)
)
season_data <- select(
df, season, team_id, eOFF, eDEF
) %>%
group_by(season, team_id) %>%
summarise(
avg_eOFF = mean(eOFF),
avg_eDEF = mean(eDEF)
)
analysis <- select(df, team_id, season, eOFF, eDEf) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("season"="prev_season", "team_id"="team_id"))
analysis <- select(df, team_id, season, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("season"="prev_season", "team_id"="team_id"))
analysis <- select(df, team_id, season, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id"))
View(analysis)
analysis <- select(df, team_id, season, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id"), suffix=c("",".ps"))
analysis <- select(df, team_id, season, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id")) %>%
mutate(curr_avg_eOFF = cum_mean(lag(eOFF)),
curr_avg_eDEF = cum_mean(lag(eDEF)))
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id")) %>%
mutate(curr_avg_eOFF = cum_mean(lag(eOFF)),
curr_avg_eDEF = cum_mean(lag(eDEF))) %>%
filter(complete.cases(.)==T) %>%
mutate(diff_this_season_eOFF = curr_avg_eOFF - eOFF,
diff_this_season_eDEF = curr_avg_eDEF - eDEF)
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id")) %>%
mutate(curr_avg_eOFF = cum_mean(lag(eOFF)),
curr_avg_eDEF = cum_mean(lag(eDEF))) %>%
filter(complete.cases(.)==T) %>%
mutate(diff_this_season_eOFF = curr_avg_eOFF - eOFF,
diff_this_season_eDEF = curr_avg_eDEF - eDEF,
diff_last_season_eOFF = avg_eOFF - eOFF,
diff_last_season_eDEF = avg_eDEF - eDEF)
View(analysis)
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
mutate(prev_season = season - 1)%>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id")) %>%
mutate(curr_avg_eOFF = cum_mean(lag(eOFF)),
curr_avg_eDEF = cum_mean(lag(eDEF))) %>%
filter(complete.cases(.)==T) %>%
mutate(diff_this_season_eOFF = curr_avg_eOFF - eOFF,
diff_this_season_eDEF = curr_avg_eDEF - eDEF,
diff_last_season_eOFF = avg_eOFF - eOFF,
diff_last_season_eDEF = avg_eDEF - eDEF)
analysis %>%
group_by(wk) %>%
summarise(
this_avg_diff = mean(diff_this_season_eOFF),
last_avg_diff = mean(diff_last_season_eOFF)
)
group_by(wk) %>%
summarise(
this_avg_diff = abs(mean(diff_this_season_eOFF)),
last_avg_diff = abs(mean(diff_last_season_eOFF))
)
analysis %>%
group_by(wk) %>%
summarise(
this_avg_diff = abs(mean(diff_this_season_eOFF)),
last_avg_diff = abs(mean(diff_last_season_eOFF))
)
rep_na <- function(vals, replacements){ifelse(is.na(vals), replacements, vals)}
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
mutate(prev_season = season - 1) %>%
mutate(avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF))) %>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id"), suffix=c("", ".prev")) %>%
mutate(
avg_eOFF = rep_na(avg_eOFF, avg_eOFF.prev),
avg_eDEF = rep_na(avg_eDEF, avg_eDEF.prev)
)
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
group_by(season, team_id) %>%
mutate(
avg_eOFF = mean(eOFF),
avg_eDEF = mean(eDEF)
)
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
group_by(season, team_id) %>%
mutate(
prev_avg_eOFF = lag(mean(eOFF)),
prev_avg_eDEF = mean(eDEF)
) %>%
mutate(avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF))) %>%
left_join(season_data, by=c("prev_season"="season", "team_id"="team_id"), suffix=c("", ".prev")) %>%
mutate(
avg_eOFF = rep_na(avg_eOFF, avg_eOFF.prev),
avg_eDEF = rep_na(avg_eDEF, avg_eDEF.prev)
)
analysis <- select(df, team_id, season, wk, eOFF, eDEF) %>%
group_by(season, team_id) %>%
mutate(
prev_avg_eOFF = lag(mean(eOFF)),
prev_avg_eDEF = mean(eDEF)
)
# LIBRARIES =====
library(dplyr)
library(tidyr)
library(lubridate)
library(RSQLite)
library(ggplot2)
library(Hmisc)
# CUSTOM FUNCITONS =====
most_common_element <- function(elements){
x <- names(sort(table(elements), decreasing = TRUE))
return(x[1])
}
# DATA =====
conn <- dbConnect(RSQLite::SQLite(), "db")
game_data <- dbGetQuery(conn, "SELECT * FROM game_data") %>%
mutate(date = as.Date(date)) %>%
mutate(
opp_stats_id = case_when(
game_stats_id %% 2 == 0 ~ game_stats_id + 1,
TRUE ~ game_stats_id - 1
),
season = year(date) - ifelse(month(date) %in% c(11, 12), 0, 1),
win = ifelse(result=='W', 1, 0)
) %>%
group_by(season) %>%
mutate(
wk = ceiling(as.numeric(date - floor_date(min(date), 'week') )/ 7)
) %>% ungroup() %>%
left_join({
select(., season, team_id, loc) %>%
group_by(season, team_id) %>%
summarise(home_arena = most_common_element(loc))
}, by=c("team_id", "season")) %>%
left_join(select(., game_stats_id, home_arena), by=c("opp_stats_id" = "game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
home_away_neutral = case_when(
loc == home_arena ~ 'H',
loc == home_arena.opp ~ 'A',
TRUE ~ 'N'
),
posses = ( 0.96*((fga)+(tov)+0.44*(fta)-(orb)) )
) %>%
group_by(season, team_id) %>% arrange(date) %>%
mutate(game_num = 1:n()) %>% ungroup()
table(game_data$wk)
library(tidyr)
library(lubridate)
library(scales)
conn <- dbConnect(RSQLite::SQLite(), "db")
game_data <- dbGetQuery(conn, "SELECT * FROM game_data")
write.csv(game_data, 'ncaa_game_data.csv')
df %>%
group_by(wk_adj) %>%
summarise(y=mean(`TOV%`)) %>%
ggplot(aes(x=wk_adj, y=y)) + geom_point() + geom_smooth(method='lm', formula = y ~ x)
