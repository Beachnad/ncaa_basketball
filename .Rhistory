mutate(han = home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
raw_eOFF_avg = cum_mean(lag(eOFF)),
raw_eDEF_avg = cum_mean(lag(eDEF)),
`raw_TOV%_avg` = cum_mean(lag(`TOV%`)),
`raw_ORB%_avg` = cum_mean(lag(`ORB%`)),
`raw_DRB%_avg` = cum_mean(lag(`DRB%`)),
`raw_FT%_avg` = cum_mean(lag(`FT%`)),
`raw_eFG%_avg` = cum_mean(lag(`eFG%`))
) %>% ungroup() %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
`nat_TOV%` = predict(tov_lm, .),
`nat_ORB%` = predict(orb_lm, .),
`nat_DRB%` = predict(drb_lm, .),
`nat_FT%` = predict(ftp_lm, .),
`nat_eFG%` = predict(eFG_lm, .),
nat_posses = predict(posses_lm, .)
) %>%
mutate(
raw_eOFF_avg = ifelse(is.na(raw_eOFF_avg), nat_eOFF, raw_eOFF_avg),
raw_eDEF_avg = ifelse(is.na(raw_eDEF_avg), nat_eOFF, raw_eDEF_avg),
`raw_TOV%_avg` = ifelse(is.na(`raw_TOV%_avg`), `nat_TOV%`, `raw_TOV%_avg`),
`raw_ORB%_avg` = ifelse(is.na(`raw_ORB%_avg`), `nat_ORB%`, `raw_ORB%_avg`),
`raw_DRB%_avg` = ifelse(is.na(`raw_DRB%_avg`), `nat_DRB%`, `raw_DRB%_avg`),
`raw_FT%_avg` = ifelse(is.na(`raw_FT%_avg`), `nat_FT%`, `raw_FT%_avg`),
`raw_eFG%_avg` = ifelse(is.na(`raw_eFG%_avg`), `nat_eFG%`, `raw_eFG%_avg`)
) %>%
left_join(select(
., game_stats_id, raw_eOFF_avg, raw_eDEF_avg, `raw_TOV%_avg`, `raw_ORB%_avg`, `raw_DRB%_avg`, `raw_FT%_avg`, `raw_eFG%_avg`
), by = c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(han == 'H' ~ eOFF_home_adv, han == 'A' ~ - eOFF_home_adv, TRUE ~ 0) + (avg_eDEF.opp - nat_eOFF),
nat_eDEF = nat_eOFF + case_when(han == 'H' ~ - eOFF_home_adv, han == 'A' ~ eOFF_home_adv, TRUE ~ 0) + (avg_eOFF.opp - nat_eOFF)
)
ff_bball <- df %>%
select(game_stats_id, opp_stats_id, team_id, season, game_num, wk_adj,
`TOV%`, eOFF, eDEF, `ORB%`, `DRB%`, `FT%`, `eFG%`) %>%
mutate(han = home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
raw_eOFF_avg = cum_mean(lag(eOFF)),
raw_eDEF_avg = cum_mean(lag(eDEF)),
`raw_TOV%_avg` = cum_mean(lag(`TOV%`)),
`raw_ORB%_avg` = cum_mean(lag(`ORB%`)),
`raw_DRB%_avg` = cum_mean(lag(`DRB%`)),
`raw_FT%_avg` = cum_mean(lag(`FT%`)),
`raw_eFG%_avg` = cum_mean(lag(`eFG%`))
) %>% ungroup() %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
`nat_TOV%` = predict(tov_lm, .),
`nat_ORB%` = predict(orb_lm, .),
`nat_DRB%` = predict(drb_lm, .),
`nat_FT%` = predict(ftp_lm, .),
`nat_eFG%` = predict(eFG_lm, .),
nat_posses = predict(posses_lm, .)
) %>%
mutate(
raw_eOFF_avg = ifelse(is.na(raw_eOFF_avg), nat_eOFF, raw_eOFF_avg),
raw_eDEF_avg = ifelse(is.na(raw_eDEF_avg), nat_eOFF, raw_eDEF_avg),
`raw_TOV%_avg` = ifelse(is.na(`raw_TOV%_avg`), `nat_TOV%`, `raw_TOV%_avg`),
`raw_ORB%_avg` = ifelse(is.na(`raw_ORB%_avg`), `nat_ORB%`, `raw_ORB%_avg`),
`raw_DRB%_avg` = ifelse(is.na(`raw_DRB%_avg`), `nat_DRB%`, `raw_DRB%_avg`),
`raw_FT%_avg` = ifelse(is.na(`raw_FT%_avg`), `nat_FT%`, `raw_FT%_avg`),
`raw_eFG%_avg` = ifelse(is.na(`raw_eFG%_avg`), `nat_eFG%`, `raw_eFG%_avg`)
) %>%
left_join(select(
., game_stats_id, raw_eOFF_avg, raw_eDEF_avg, `raw_TOV%_avg`, `raw_ORB%_avg`, `raw_DRB%_avg`, `raw_FT%_avg`, `raw_eFG%_avg`
), by = c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(han == 'H' ~ eOFF_home_adv, han == 'A' ~ - eOFF_home_adv, TRUE ~ 0) + (avg_eDEF.opp - nat_eOFF),
nat_eDEF = nat_eOFF + case_when(han == 'H' ~ - eOFF_home_adv, han == 'A' ~ eOFF_home_adv, TRUE ~ 0) + (avg_eOFF.opp - nat_eOFF)
)
ff_bball <- df %>%
select(game_stats_id, opp_stats_id, team_id, season, game_num, wk_adj, home_away_neutral,
`TOV%`, eOFF, eDEF, `ORB%`, `DRB%`, `FT%`, `eFG%`) %>%
mutate(han = home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
raw_eOFF_avg = cum_mean(lag(eOFF)),
raw_eDEF_avg = cum_mean(lag(eDEF)),
`raw_TOV%_avg` = cum_mean(lag(`TOV%`)),
`raw_ORB%_avg` = cum_mean(lag(`ORB%`)),
`raw_DRB%_avg` = cum_mean(lag(`DRB%`)),
`raw_FT%_avg` = cum_mean(lag(`FT%`)),
`raw_eFG%_avg` = cum_mean(lag(`eFG%`))
) %>% ungroup() %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
`nat_TOV%` = predict(tov_lm, .),
`nat_ORB%` = predict(orb_lm, .),
`nat_DRB%` = predict(drb_lm, .),
`nat_FT%` = predict(ftp_lm, .),
`nat_eFG%` = predict(eFG_lm, .),
nat_posses = predict(posses_lm, .)
) %>%
mutate(
raw_eOFF_avg = ifelse(is.na(raw_eOFF_avg), nat_eOFF, raw_eOFF_avg),
raw_eDEF_avg = ifelse(is.na(raw_eDEF_avg), nat_eOFF, raw_eDEF_avg),
`raw_TOV%_avg` = ifelse(is.na(`raw_TOV%_avg`), `nat_TOV%`, `raw_TOV%_avg`),
`raw_ORB%_avg` = ifelse(is.na(`raw_ORB%_avg`), `nat_ORB%`, `raw_ORB%_avg`),
`raw_DRB%_avg` = ifelse(is.na(`raw_DRB%_avg`), `nat_DRB%`, `raw_DRB%_avg`),
`raw_FT%_avg` = ifelse(is.na(`raw_FT%_avg`), `nat_FT%`, `raw_FT%_avg`),
`raw_eFG%_avg` = ifelse(is.na(`raw_eFG%_avg`), `nat_eFG%`, `raw_eFG%_avg`)
) %>%
left_join(select(
., game_stats_id, raw_eOFF_avg, raw_eDEF_avg, `raw_TOV%_avg`, `raw_ORB%_avg`, `raw_DRB%_avg`, `raw_FT%_avg`, `raw_eFG%_avg`
), by = c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(han == 'H' ~ eOFF_home_adv, han == 'A' ~ - eOFF_home_adv, TRUE ~ 0) + (avg_eDEF.opp - nat_eOFF),
nat_eDEF = nat_eOFF + case_when(han == 'H' ~ - eOFF_home_adv, han == 'A' ~ eOFF_home_adv, TRUE ~ 0) + (avg_eOFF.opp - nat_eOFF)
)
ff_bball <- df %>%
select(game_stats_id, opp_stats_id, team_id, season, game_num, wk_adj, home_away_neutral,
`TOV%`, eOFF, eDEF, `ORB%`, `DRB%`, `FT%`, `eFG%`) %>%
mutate(han = home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
raw_eOFF_avg = cum_mean(lag(eOFF)),
raw_eDEF_avg = cum_mean(lag(eDEF)),
`raw_TOV%_avg` = cum_mean(lag(`TOV%`)),
`raw_ORB%_avg` = cum_mean(lag(`ORB%`)),
`raw_DRB%_avg` = cum_mean(lag(`DRB%`)),
`raw_FT%_avg` = cum_mean(lag(`FT%`)),
`raw_eFG%_avg` = cum_mean(lag(`eFG%`))
) %>% ungroup() %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
`nat_TOV%` = predict(tov_lm, .),
`nat_ORB%` = predict(orb_lm, .),
`nat_DRB%` = predict(drb_lm, .),
`nat_FT%` = predict(ftp_lm, .),
`nat_eFG%` = predict(eFG_lm, .),
nat_posses = predict(posses_lm, .)
) %>%
mutate(
raw_eOFF_avg = ifelse(is.na(raw_eOFF_avg), nat_eOFF, raw_eOFF_avg),
raw_eDEF_avg = ifelse(is.na(raw_eDEF_avg), nat_eOFF, raw_eDEF_avg),
`raw_TOV%_avg` = ifelse(is.na(`raw_TOV%_avg`), `nat_TOV%`, `raw_TOV%_avg`),
`raw_ORB%_avg` = ifelse(is.na(`raw_ORB%_avg`), `nat_ORB%`, `raw_ORB%_avg`),
`raw_DRB%_avg` = ifelse(is.na(`raw_DRB%_avg`), `nat_DRB%`, `raw_DRB%_avg`),
`raw_FT%_avg` = ifelse(is.na(`raw_FT%_avg`), `nat_FT%`, `raw_FT%_avg`),
`raw_eFG%_avg` = ifelse(is.na(`raw_eFG%_avg`), `nat_eFG%`, `raw_eFG%_avg`)
) %>%
left_join(select(
., game_stats_id, raw_eOFF_avg, raw_eDEF_avg, `raw_TOV%_avg`, `raw_ORB%_avg`, `raw_DRB%_avg`, `raw_FT%_avg`, `raw_eFG%_avg`
), by = c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(han == 'H' ~ eOFF_home_adv, han == 'A' ~ - eOFF_home_adv, TRUE ~ 0) + (raw_eDEF_avg.opp - nat_eOFF),
nat_eDEF = nat_eOFF + case_when(han == 'H' ~ - eOFF_home_adv, han == 'A' ~ eOFF_home_adv, TRUE ~ 0) + (raw_eOFF_avg.opp - nat_eOFF)
)
summary(ff_bball$exp_eOFF)
df %>%
group_by(wk_adj) %>%
summarise(y=mean(`TOV%`)) %>%
ggplot(aes(x=wk_adj, y=y)) + geom_point() + geom_smooth(method='lm', formula = y ~ x)
orb_home_adv <- h_adv('ORB%')
orb_home_adv
ff_bball <- df %>%
select(game_stats_id, opp_stats_id, team_id, season, game_num, wk_adj, home_away_neutral,
`TOV%`, eOFF, eDEF, `ORB%`, `DRB%`, `FT%`, `eFG%`) %>%
mutate(han = home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
raw_eOFF_avg = cum_mean(lag(eOFF)),
raw_eDEF_avg = cum_mean(lag(eDEF)),
`raw_TOV%_avg` = cum_mean(lag(`TOV%`)),
`raw_ORB%_avg` = cum_mean(lag(`ORB%`)),
`raw_DRB%_avg` = cum_mean(lag(`DRB%`)),
`raw_FT%_avg` = cum_mean(lag(`FT%`)),
`raw_eFG%_avg` = cum_mean(lag(`eFG%`))
) %>% ungroup() %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
`nat_TOV%` = predict(tov_lm, .),
`nat_ORB%` = predict(orb_lm, .),
`nat_DRB%` = predict(drb_lm, .),
`nat_FT%` = predict(ftp_lm, .),
`nat_eFG%` = predict(eFG_lm, .),
nat_posses = predict(posses_lm, .)
) %>%
mutate(
raw_eOFF_avg = ifelse(is.na(raw_eOFF_avg), nat_eOFF, raw_eOFF_avg),
raw_eDEF_avg = ifelse(is.na(raw_eDEF_avg), nat_eOFF, raw_eDEF_avg),
`raw_TOV%_avg` = ifelse(is.na(`raw_TOV%_avg`), `nat_TOV%`, `raw_TOV%_avg`),
`raw_ORB%_avg` = ifelse(is.na(`raw_ORB%_avg`), `nat_ORB%`, `raw_ORB%_avg`),
`raw_DRB%_avg` = ifelse(is.na(`raw_DRB%_avg`), `nat_DRB%`, `raw_DRB%_avg`),
`raw_FT%_avg` = ifelse(is.na(`raw_FT%_avg`), `nat_FT%`, `raw_FT%_avg`),
`raw_eFG%_avg` = ifelse(is.na(`raw_eFG%_avg`), `nat_eFG%`, `raw_eFG%_avg`)
) %>%
left_join(select(
., game_stats_id, raw_eOFF_avg, raw_eDEF_avg, `raw_TOV%_avg`, `raw_ORB%_avg`, `raw_DRB%_avg`, `raw_FT%_avg`, `raw_eFG%_avg`
), by = c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(han == 'H' ~ eOFF_home_adv, han == 'A' ~ - eOFF_home_adv, TRUE ~ 0) + (raw_eDEF_avg.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(han == 'H' ~ - eOFF_home_adv, han == 'A' ~ eOFF_home_adv, TRUE ~ 0) + (raw_eOFF_avg.opp - nat_eOFF),
exp_tov  = `nat_TOV%`,
exp_orb = `nat_ORB%` + case_when(han == 'H' ~ orb_home_adv, han == 'A' ~ - orb_home_adv, T ~ 0) + (`raw_DRB%_avg.opp` = `nat_DRB%`)
)
ff_bball <- df %>%
select(game_stats_id, opp_stats_id, team_id, season, game_num, wk_adj, home_away_neutral,
`TOV%`, eOFF, eDEF, `ORB%`, `DRB%`, `FT%`, `eFG%`) %>%
mutate(han = home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
raw_eOFF_avg = cum_mean(lag(eOFF)),
raw_eDEF_avg = cum_mean(lag(eDEF)),
`raw_TOV%_avg` = cum_mean(lag(`TOV%`)),
`raw_ORB%_avg` = cum_mean(lag(`ORB%`)),
`raw_DRB%_avg` = cum_mean(lag(`DRB%`)),
`raw_FT%_avg` = cum_mean(lag(`FT%`)),
`raw_eFG%_avg` = cum_mean(lag(`eFG%`))
) %>% ungroup() %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
`nat_TOV%` = predict(tov_lm, .),
`nat_ORB%` = predict(orb_lm, .),
`nat_DRB%` = predict(drb_lm, .),
`nat_FT%` = predict(ftp_lm, .),
`nat_eFG%` = predict(eFG_lm, .),
nat_posses = predict(posses_lm, .)
) %>%
mutate(
raw_eOFF_avg = ifelse(is.na(raw_eOFF_avg), nat_eOFF, raw_eOFF_avg),
raw_eDEF_avg = ifelse(is.na(raw_eDEF_avg), nat_eOFF, raw_eDEF_avg),
`raw_TOV%_avg` = ifelse(is.na(`raw_TOV%_avg`), `nat_TOV%`, `raw_TOV%_avg`),
`raw_ORB%_avg` = ifelse(is.na(`raw_ORB%_avg`), `nat_ORB%`, `raw_ORB%_avg`),
`raw_DRB%_avg` = ifelse(is.na(`raw_DRB%_avg`), `nat_DRB%`, `raw_DRB%_avg`),
`raw_FT%_avg` = ifelse(is.na(`raw_FT%_avg`), `nat_FT%`, `raw_FT%_avg`),
`raw_eFG%_avg` = ifelse(is.na(`raw_eFG%_avg`), `nat_eFG%`, `raw_eFG%_avg`)
) %>%
left_join(select(
., game_stats_id, raw_eOFF_avg, raw_eDEF_avg, `raw_TOV%_avg`, `raw_ORB%_avg`, `raw_DRB%_avg`, `raw_FT%_avg`, `raw_eFG%_avg`
), by = c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(han == 'H' ~ eOFF_home_adv, han == 'A' ~ - eOFF_home_adv, TRUE ~ 0) + (raw_eDEF_avg.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(han == 'H' ~ - eOFF_home_adv, han == 'A' ~ eOFF_home_adv, TRUE ~ 0) + (raw_eOFF_avg.opp - nat_eOFF),
exp_tov  = `nat_TOV%`,
exp_orb = `nat_ORB%` + case_when(han == 'H' ~ orb_home_adv, han == 'A' ~ - orb_home_adv, T ~ 0) + (`raw_DRB%_avg.opp` - `nat_DRB%`)
)
adjData <- select(df, game_stats_id, opp_stats_id, team_id, season, wk, game_num, wk_adj, eOFF, eDEF, `ORB%`, `DRB%`, posses, home_away_neutral) %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
nat_orb = predict(orb_lm, .),
nat_drb = predict(drb_lm, .),
nat_tempo = predict(posses_lm, .),
han=home_away_neutral
) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF)),
avg_orb = cum_mean(lag(`ORB%`)),
avg_drb = cum_mean(lag(`DRB`)),
avg_tempo = cum_mean(lag(posses))
) %>% ungroup() %>%
# Temporary Replacement Strategy, Should Re-Evaluate in the future
mutate(
avg_eOFF = ifelse(is.na(avg_eOFF), nat_eOFF, avg_eOFF),
avg_eDEF = ifelse(is.na(avg_eDEF), nat_eOFF, avg_eDEF),
avg_orb  = ifelse(is.na(avg_orb),  nat_orb,  avg_orb),
avg_drb  = ifelse(is.na(avg_drb),  nat_drb,  avg_drb),
avg_tempo = ifelse(is.na(avg_tempo), nat_tempo, avg_tempo)
) %>%
left_join(select(., game_stats_id, avg_eOFF, avg_eDEF, avg_orb, avg_drb, avg_tempo), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ eOFF_home_adv / 2,
home_away_neutral == 'A' ~ - eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eDEF.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ - eOFF_home_adv / 2,
home_away_neutral == 'A' ~ eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eOFF.opp - nat_eOFF),
exp_orb = nat_orb + case_when(han=='H' ~ orb_home_adv, han=='A'~-orb_home_adv,T~0) + (avg_drb.opp - nat_drb),
exp_drb = nat_drb + case_when(han=='H'~drb_home_adv,han=='A'~-drb_home_adv,T~0) + (avg_orb.opp - nat_orb),
exp_tempo = nat_tempo + (avg_tempo.opp - nat_tempo)
) %>%
mutate(
adj_eOFF = nat_eOFF * eOFF / exp_eOFF,
adj_eDEF = nat_eOFF * eDEF / exp_eDEF,
adj_orb  = nat_orb  * orb / exp_orb,
adj_drb = nat_drb * drb / exp_drb,
adj_tempo = nat_tempo * posses / exp_tempo
)
adjData <- select(df, game_stats_id, opp_stats_id, team_id, season, wk, game_num, wk_adj, eOFF, eDEF, `ORB%`, `DRB%`, posses, home_away_neutral) %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
nat_orb = predict(orb_lm, .),
nat_drb = predict(drb_lm, .),
nat_tempo = predict(posses_lm, .),
han=home_away_neutral
) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF)),
avg_orb = cum_mean(lag(`ORB%`)),
avg_drb = cum_mean(lag(`DRB%`)),
avg_tempo = cum_mean(lag(posses))
) %>% ungroup() %>%
# Temporary Replacement Strategy, Should Re-Evaluate in the future
mutate(
avg_eOFF = ifelse(is.na(avg_eOFF), nat_eOFF, avg_eOFF),
avg_eDEF = ifelse(is.na(avg_eDEF), nat_eOFF, avg_eDEF),
avg_orb  = ifelse(is.na(avg_orb),  nat_orb,  avg_orb),
avg_drb  = ifelse(is.na(avg_drb),  nat_drb,  avg_drb),
avg_tempo = ifelse(is.na(avg_tempo), nat_tempo, avg_tempo)
) %>%
left_join(select(., game_stats_id, avg_eOFF, avg_eDEF, avg_orb, avg_drb, avg_tempo), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ eOFF_home_adv / 2,
home_away_neutral == 'A' ~ - eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eDEF.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ - eOFF_home_adv / 2,
home_away_neutral == 'A' ~ eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eOFF.opp - nat_eOFF),
exp_orb = nat_orb + case_when(han=='H' ~ orb_home_adv, han=='A'~-orb_home_adv,T~0) + (avg_drb.opp - nat_drb),
exp_drb = nat_drb + case_when(han=='H'~drb_home_adv,han=='A'~-drb_home_adv,T~0) + (avg_orb.opp - nat_orb),
exp_tempo = nat_tempo + (avg_tempo.opp - nat_tempo)
) %>%
mutate(
adj_eOFF = nat_eOFF * eOFF / exp_eOFF,
adj_eDEF = nat_eOFF * eDEF / exp_eDEF,
adj_orb  = nat_orb  * orb / exp_orb,
adj_drb = nat_drb * drb / exp_drb,
adj_tempo = nat_tempo * posses / exp_tempo
)
adjData <- select(df, game_stats_id, opp_stats_id, team_id, season, wk, game_num, wk_adj, eOFF, eDEF, `ORB%`, `DRB%`, posses, home_away_neutral) %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
nat_orb = predict(orb_lm, .),
nat_drb = predict(drb_lm, .),
nat_tempo = predict(posses_lm, .),
han=home_away_neutral
) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF)),
avg_orb = cum_mean(lag(`ORB%`)),
avg_drb = cum_mean(lag(`DRB%`)),
avg_tempo = cum_mean(lag(posses))
) %>% ungroup() %>%
# Temporary Replacement Strategy, Should Re-Evaluate in the future
mutate(
avg_eOFF = ifelse(is.na(avg_eOFF), nat_eOFF, avg_eOFF),
avg_eDEF = ifelse(is.na(avg_eDEF), nat_eOFF, avg_eDEF),
avg_orb  = ifelse(is.na(avg_orb),  nat_orb,  avg_orb),
avg_drb  = ifelse(is.na(avg_drb),  nat_drb,  avg_drb),
avg_tempo = ifelse(is.na(avg_tempo), nat_tempo, avg_tempo)
) %>%
left_join(select(., game_stats_id, avg_eOFF, avg_eDEF, avg_orb, avg_drb, avg_tempo), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ eOFF_home_adv / 2,
home_away_neutral == 'A' ~ - eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eDEF.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ - eOFF_home_adv / 2,
home_away_neutral == 'A' ~ eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eOFF.opp - nat_eOFF),
exp_orb = nat_orb + case_when(han=='H' ~ orb_home_adv, han=='A'~-orb_home_adv,T~0) + (avg_drb.opp - nat_drb),
exp_drb = nat_drb + case_when(han=='H'~drb_home_adv,han=='A'~-drb_home_adv,T~0) + (avg_orb.opp - nat_orb),
exp_tempo = nat_tempo + (avg_tempo.opp - nat_tempo)
) %>%
mutate(
adj_eOFF = nat_eOFF * eOFF / exp_eOFF,
adj_eDEF = nat_eOFF * eDEF / exp_eDEF,
adj_orb  = nat_orb  * `ORB%` / exp_orb,
adj_drb = nat_drb * `DRB%` / exp_drb,
adj_tempo = nat_tempo * posses / exp_tempo
)
View(adjData)
max(df$`DRB%`)
max(df$`ORB%`)
minmax <- function(x, min=0, max=1){ case_when(x<min~min, x>max~max, T~x) }
adjData <- select(df, game_stats_id, opp_stats_id, team_id, season, wk, game_num, wk_adj, eOFF, eDEF, `ORB%`, `DRB%`, posses, home_away_neutral) %>%
mutate(
nat_eOFF = predict(eOFF_lm, .),
nat_orb = predict(orb_lm, .),
nat_drb = predict(drb_lm, .),
nat_tempo = predict(posses_lm, .),
han=home_away_neutral
) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
avg_eOFF = cum_mean(lag(eOFF)),
avg_eDEF = cum_mean(lag(eDEF)),
avg_orb = cum_mean(lag(`ORB%`)),
avg_drb = cum_mean(lag(`DRB%`)),
avg_tempo = cum_mean(lag(posses))
) %>% ungroup() %>%
# Temporary Replacement Strategy, Should Re-Evaluate in the future
mutate(
avg_eOFF = ifelse(is.na(avg_eOFF), nat_eOFF, avg_eOFF),
avg_eDEF = ifelse(is.na(avg_eDEF), nat_eOFF, avg_eDEF),
avg_orb  = ifelse(is.na(avg_orb),  nat_orb,  avg_orb),
avg_drb  = ifelse(is.na(avg_drb),  nat_drb,  avg_drb),
avg_tempo = ifelse(is.na(avg_tempo), nat_tempo, avg_tempo)
) %>%
left_join(select(., game_stats_id, avg_eOFF, avg_eDEF, avg_orb, avg_drb, avg_tempo), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ eOFF_home_adv / 2,
home_away_neutral == 'A' ~ - eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eDEF.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ - eOFF_home_adv / 2,
home_away_neutral == 'A' ~ eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_eOFF.opp - nat_eOFF),
exp_orb = nat_orb + case_when(han=='H' ~ orb_home_adv, han=='A'~-orb_home_adv,T~0) + (avg_drb.opp - nat_drb),
exp_drb = nat_drb + case_when(han=='H'~drb_home_adv,han=='A'~-drb_home_adv,T~0) + (avg_orb.opp - nat_orb),
exp_tempo = nat_tempo + (avg_tempo.opp - nat_tempo)
) %>%
mutate(
adj_eOFF = nat_eOFF * eOFF / exp_eOFF,
adj_eDEF = nat_eOFF * eDEF / exp_eDEF,
adj_orb = minmax(nat_orb  * `ORB%` / exp_orb),
adj_drb = minmax(nat_drb * `DRB%` / exp_drb),
adj_tempo = nat_tempo * posses / exp_tempo
)
iter_data <- ff_df %>%
select(game_stats_id, opp_stats_id, team_id, season, game_num,
eOFF, eDEF, `ORB%`, `DRB%`, posses,
adj_eOFF, adj_eDEF, adj_orb, adj_drb, adj_tempo,
nat_eOFF, nat_orb, nat_drb, nat_tempo,
home_away_neutral) %>%
group_by(season, team_id) %>%
arrange(game_num) %>%
mutate(
avg_adj_eOFF = cum_mean(lag(adj_eOFF)),
avg_adj_eDEF = cum_mean(lag(adj_eDEF)),
avg_adj_orb  = cum_mean(lag(adj_orb)),
avg_adj_drb  = cum_mean(lag(adj_drb)),
avh_adj_tempo= cum_mean(lag(adj_tempo))
) %>% ungroup() %>%
mutate(
avg_adj_eOFF = ifelse(is.na(avg_adj_eOFF), nat_eOFF, avg_adj_eOFF),
avg_adj_eDEF = ifelse(is.na(avg_adj_eDEF), nat_eOFF, avg_adj_eDEF),
avg_adj_orb  = ifelse(is.na(avg_adj_orb), nat_orb, avg_adj_orb),
avg_adj_drb  = ifelse(is.na(avg_adj_drb), nat_drb, avg_adj_drb),
avh_adj_tempo= ifelse(is.na(avg_adj_tempo), nat_tmpo, avg_adj_tempo)
) %>%
left_join(select(., game_stats_id, avg_adj_eOFF, avg_adj_eDEF), by=c("opp_stats_id"="game_stats_id"), suffix=c("", ".opp")) %>%
mutate(
exp_eOFF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ eOFF_home_adv / 2,
home_away_neutral == 'A' ~ - eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_adj_eDEF.opp - nat_eOFF),
exp_eDEF = nat_eOFF + case_when(
home_away_neutral == 'H' ~ - eOFF_home_adv / 2,
home_away_neutral == 'A' ~ eOFF_home_adv / 2,
TRUE ~ 0
) + (avg_adj_eOFF.opp - nat_eOFF)
) %>%
mutate(
adj_eOFF = nat_eOFF * eOFF / exp_eOFF,
adj_eDEF = nat_eOFF * eDEF / exp_eDEF
)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(googlesheets)
gs_ls()
ss <- gs_title("Wedding Invites")
ss <- gs_title("Wedding Invites")
View(ss)
data <- gs_read(ss)
View(data)
data <- gs_read(ss, ws=2)
library(shinydashboard)
runApp('~/pprojects/wedding/app')
runApp('~/pprojects/wedding/app')
runApp('~/pprojects/wedding/app')
max(table(data$side))
table(data$side)
max(table(data$Side))
runApp('~/pprojects/wedding/app')
ttt <- gs_auth()
saveRDS(ttt, "ttt.RDS")
runApp('~/pprojects/wedding/app')
runApp('~/pprojects/wedding/app')
